# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:8.0-node-browsers

    steps:
      - checkout

      - run:
          name: "Prepare Environment"
          command: |
            sudo apt update
            sudo docker-php-ext-install zip
      
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: "Install Dependencies"
          command: composer install -n --prefer-dist

 
      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

      #prepare database
      - run:
          name: "Create Environment file and generate app key"
          command: |
            mv .env.testing .env
            php artisan key:generate
      
      - run:
          name: "Create database and run migration"
          command: |
            touch database/database.sqlite
            php artisan migrate --env=testing

      - run:
          name: "Run database seeder"
          command: |
          php artisan db:seed --class=UserSeeder:
      # Download and cache dependencies
      

# run:
# name: "Create database and run migration"
# command: |
# touch database/database.sqlite
# php artisan migrate --env=testing

# run:
# name: "Run DB Seeder"
# command: |
# php artisan db:seed --class=UserSeeder
  
      #- run:
       #   name: "Create DB and run migrate"
        #  command: |
         #   touch database/database.sqlite
          #  php artisan migrate --env=testing

      #- run:
       #   name: "Run Database Seeder"
        #  command: |
         #   php artisan db:seed --class=UserSeeder

     
      # run tests with phpunit
      - run:
          name: "Run Unit Tests"
          command: ./vendor/bin/phpunit tests/Unit


